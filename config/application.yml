server:
  port: 6969
  tomcat:
    threads:
      max: 200
    connection-timeout: 500000

spring:
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  main:
    allow-bean-definition-overriding: true
  jpa:
    database: MYSQL
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    format_sql: true
    generate-ddl: false
    open-in-view: false
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/polling_app?createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8
    username: root
    password: 123456
    hikari:
      connectionTimeout: 30000
      minimumIdle: 12
      maximumPoolSize: 50
      idleTimeout: 600000
      maxLifetime: 1800000
      autoCommit: true
      leakDetectionThreshold: 60000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jackson:
      serialization:
        WRITE_DATES_AS_TIMESTAMPS: false
      time-zone: UTC
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 121189305185277
            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
              - email
              - public_profile
          github:
            clientId: d3e47fc2ddd966fa4352
            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)


logging:
  level:
    vn.com.edu.fpt: info
    org:
      hibernate:
        SQL: info
  config: config/log4j2.yml
app:
  jwtSecret: "9a02115a835ee03d5fb83cd8a468ea33e4090aaaec87f53c9fa54512bbef4db8dc656c82a315fa0c785c08b0134716b81ddcd0153d2a7556f2e154912cf5675f"
  jwtExpirationInMs: 604800000
  cors:
    allowedOrigins: http://localhost:3000 # Comma separated list of allowed origins
    oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:3000/oauth2/redirect
        - myandroidapp://oauth2/redirect
        - myiosapp://oauth2/redirect
  admin:
    username: admin
    password: admin

#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
